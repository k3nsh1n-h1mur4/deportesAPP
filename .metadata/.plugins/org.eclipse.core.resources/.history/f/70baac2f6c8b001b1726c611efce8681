import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.*;

import com.mysql.cj.protocol.Resultset;


public class RegisterForm {
	private String username;
	private String password;
	public JTextField txUser;
	public JTextField txPassword;
	

	public RegisterForm() {
		JFrame jf = new JFrame();
		JPanel jp = new JPanel();
		
		jf.setTitle("Registro Usuarios");
		JLabel lbuser = new JLabel();
		lbuser.setText("Usuario: ");
		lbuser.setBounds(20, 50, 150, 20);
		JTextField txuser = new JTextField();
		//txuser.setText("Usuario: ");
		txuser.setBounds(100, 50, 150, 20);
		
		JLabel lbpassword = new JLabel();
		lbpassword.setText("Password: ");
		lbpassword.setBounds(20, 100, 150, 20);
		JTextField txPassword = new JTextField();
		//txpassword.setText("Password: ");
		txPassword.setBounds(100, 100, 150, 20);
		
		JButton btnRegister = new JButton();
		btnRegister.setText("Registrar Usuario");
		btnRegister.setBounds(60, 150, 200, 30);
		
		
		jp.add(lbuser);
		jp.add(txuser);
		jp.add(lbpassword);
		jp.add(txPassword);
		jp.add(btnRegister);
		jf.setLocation(400, 400);
		jf.setLayout(null);
		jf.getContentPane().add(jp);
		jp.setBackground(Color.ORANGE);
		jf.setSize(400, 400);
		jf.setVisible(true);
		jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		ActionListener al = new ActionListener() {
			
			
			@Override
			public void actionPerformed(ActionEvent e) {
				username = txUser.getText();
				password = txPassword.getText();
				try {
					Register(username, password);
				} catch (ClassNotFoundException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
			
		};
		btnRegister.addActionListener(al);
	}
	
	
	
	
	
	
	
	
	private void Register(String username, String password) throws ClassNotFoundException {
		username = txUser.getText();
		password = txPassword.getText();
		
		String SQL = "INSERT INTO users(username, password) VALUES(?, ?)";
		System.out.println(username);
		System.out.println(password);
		//System.out.printf("hash: %s", password.hashCode());
		
		MysqlConnector my = new MysqlConnector();
		Connection conn = my.DBConnection();
		
		try {
			if(username.isEmpty() && password.isEmpty()) {
				System.out.println("Usuario o Contrase√±a en blanco");
				System.exit(1);
			} else {
				PreparedStatement pstm = conn.prepareStatement(SQL);
				pstm.setString(2, username);
				pstm.setString(3, password);
				ResultSet rs = pstm.executeQuery(SQL);
				if(rs.rowInserted()) {
					System.out.println("Registro realizado exitosamente");
				} else {
					System.out.println("Registro no se realizo");
				}
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		
	}

	
	/*public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}*/
	
	
	
	

	
	
}
